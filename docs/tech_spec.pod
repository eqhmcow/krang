=head1 Krang Technical Specification

This document describes the technical details of the Krang project at
a high level.  This document is neither exhaustive or particularly
reliable as it is not frequently updated.

=head1 Modules

This section contains a catalogue all code modules to be written.  The
descriptions of these modules are kept brief, relying the module
documentation to provide in depth treatment.



=head2 Core Systems

=over

=item L<Krang::Handler> 

Apache/mod_perl handler for Krang.  Sets up the appropriate instance
and passes the request to a Krang::CGI module.  Also handles
authentication.

=item L<Krang::Session>

Sessions in Krang maintain state between browser hits.

=item L<Krang::DB>

Responsible for managing connections to Krang databases.  Also
contains routines to create new databases.  Any database convenience
functions we create will live here.

=item L<Krang::Conf>

Provides access to the configuration file in F<conf/krang.conf>.

=item L<Krang::CGI>

Base class for all CGI::Application modules which provide the web
interface for Krang.

=back



=head2 Element System

See HREF[the Krang Element System overview|element_system.html] for
more details.

=over

=item L<Krang::ElementLibrary>

Responsible for loading and configuring sets of Element Classes
contained in the Element Library.

=item L<Krang::ElementClass>

The base class for all Krang element classes.  Provides the
functionality that allows Krang::Element objects to accept user input,
persist in the database and render in published documents.

=item L<Krang::Element>

Manages element data created through the story and category editors.
Each Krang::Element object contains a reference to a
Krang::ElementClass object which controls its behavior.

=item L<Krang::CGI::ElementEditor>

Provides the element editor web interface, used by Krang::CGI::Story
and Krang::CGI::Category.

=back



=head2 Stories

=over

=item L<Krang::Story>

Krang story object API.  Manages the creation, listing and storage of
Story objects.

=item L<Krang::CGI::StoryEditor>

Provides the Story creation and editing interface.

=back



=head2 Media

=over

=item L<Krang::Media>

Krang media object API.  Manages the creation, listing and storage of
Media objects.

=item L<Krang::CGI::MediaEditor>

Provides the Media creation and editing interface.

=item L<Krang::CGI::MediaBulkUpload>

Provides the Media bulk upload interface, not including the virtual FTP server.

=back



=head2 Templates

=over

=item L<Krang::Template>

Krang template object API.  Manages the creation, listing and storage of
Template objects.

=item L<Krang::CGI::TemplateEditor>

Provides the Story creation and editing interface.

=back



=head2 Contributors

=over

=item L<Krang::Contributor>

Krang contributor object API.  Manages the creation, listing and
storage of contributors.

=item L<Krang::CGI::Contributor>

Allows users to manage contributors.  Also provides run-modes for use
by the Story and Media interfaces in picking contributors.

=back



=head2 Workflow

=over

=item L<Krang::Publisher>

Contains the code that runs the publish process for Stories and Media.

=item L<Krang::CGI::Publisher>

The publishing interface.

=item L<Krang::Desk>

API for Krang desks, contains methods for moving objects between desks.

=item L<Krang::CGI::Desk>

Desk interface module.

=item L<Krang::CGI::Workspace>

Manages My Workspace, which is a special kind of desk.

=back



=head2 Category

=over

=item L<Krang::Category>

Provides the API for Krang categories.

=item L<Krang::CGI::Category>

Provides the admin interface for categories.

=back



=head2 Site

=over

=item L<Krang::Site>

Provides the API for sites within Krang.

=item L<Krang::CGI::Site>

Provides the admin interface for sites.

=back



=head2 Search

=over

=item L<Krang::HTMLPager>

Provides paging for lists of items in Krang.

=back



=head2 User

=over

=item L<Krang::User>

Provides the API for Krang users.

=item L<Krang::CGI::User>

Provides the admin interface for users.

=item L<Krang::CGI::Login>

The login screen.

=back



=head2 Permissions Groups

=over

=item L<Krang::Group>

The core API for the user group system, which controls permissions.

=item L<Krang::CGI::Group>

Provides the admin interface for setting up user groups.

=back



=head2 Logging and Error Handling

=over

=item L<Krang::Log>

Provides unified logging services for all Krang processes with output
going to F<logs/krang.log>.

=item L<Krang::History>

Mantains a per-object log of important events for stories, media and
template objects.

=item L<Krang::CGI::Bugzilla>

Provides an interface for filling out a bug report inside Krang, which
will automatically collect all necessary state information.

=back



=head2 Alerts

=over

=item L<Krang::Alert>

The core alert API.  Users can configure alerts to send them emails
when certain events occur within Krang.

=item L<Krang::CGI::Alert>

User interface for creating alerts.

=back



=head2 XML

=over

=item L<Krang::DataSet>

Provides a XML import/export for all Krang objects.

=back



=head2 FTP

=over

=item L<Krang::FTP::Server>

Provides an FTP interface to templates and media for bulk operations
using L<Net::FTPServer>.

=back



=head1 Programs

This list contains all command-line programs to be created for Krang.
The main part of the logic for these programs will reside in the
modules listed above.

=over

=item C<krang_install>

Krang installation process.

=item C<krang_upgrade>

Krang installation process.

=item C<krang_ctl>

Script to start, stop and restart all of the Krang daemons in one
operation.

=item C<krang_scheduled>

Daemon to handles Krang's scheduled tasks.

=item C<krang_apachectl>

Script to start, stop and restart Apache.

=item C<krang_ftpd>

Krang FTP daemon.

=item C<krang_export>

Export Krang data set (.kds) files.

=item C<krang_import>

Import Krang data set (.kds) files.

=item C<krang_delete>

Delete Krang objects the easy way.

=item C<krang_publish>

Script to publish stories and media.

=back

