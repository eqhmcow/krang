#!/usr/bin/perl

use strict;
use warnings;

=head1 NAME

krang_info - gives a quick summary of the Krang installation

=head1 SYNOPSIS

To find out the version, installed addons, and instances within the
Krang installation:

  bin/krang_info

=head1 DESCRIPTION

This script returns a quick summary of the Krang installation - which
version of Krang, the addons installed, and a full list of the
instances.

=head1 OPTIONS

None at this time.

=cut


use File::Spec::Functions qw(catdir catfile splitdir rel2abs canonpath);
use FindBin qw($RealBin);
use Config;

BEGIN {
    # Find a KRANG_ROOT based on path to bin
    my @dir = splitdir(canonpath($RealBin));
    $ENV{KRANG_ROOT} ||= catdir(@dir[0 .. $#dir - 1]);

    # use $KRANG_ROOT/lib for modules
    my $lib    = catdir($ENV{KRANG_ROOT}, "lib");
    $ENV{PERL5LIB} = $ENV{PERL5LIB} ? "$ENV{PERL5LIB}:${lib}" : 
      "${lib}";
    unshift @INC, $lib, "$lib/".$Config{archname};

    # load Krang::Conf (don't need to load Krang here because we won't
    # be slinging elements)
    $ENV{KRANG_NO_ELEMENTLIBS} = 1;
    eval { require Krang::Conf };
    warn << "END" and exit(1) if $@;
######################################################################

Cannot load Krang.

Error message:

$@

######################################################################
END
}

use Krang::ClassFactory qw(pkg);

# set the instance as the first instance that exists - just so that we
# can get Krang::Script loaded without complaints.
use Krang::ClassLoader 'Conf';
BEGIN { $ENV{KRANG_INSTANCE} ||= (pkg('Conf')->instances)[0]; }

use Krang::ClassLoader 'Script';

use Krang;
use Krang::ClassLoader 'AddOn';
use Krang::ClassLoader 'Site';
use Krang::ClassLoader 'Story';
use Krang::ClassLoader 'Media';

my @instances  = pkg('Conf')->instances;
my $version    = $Krang::VERSION;
my $ip_address = pkg('Conf')->get('ApacheAddr');


my @addons = sort { $a->name cmp $b->name } pkg('AddOn')->find();

my %instance_stats;
foreach my $i (@instances) {
    my %site_list;

    pkg('Conf')->instance($i);

    foreach my $site (pkg('Site')->find(order_by => 'url')) {
        $site_list{$site->url}{site_id} = $site->site_id;
        $site_list{$site->url}{story_count} =
          pkg('Story')->find(count   => 1,
                             site_id => $site->site_id);
        $site_list{$site->url}{media_count} =
          pkg('Media')->find(count   => 1,
                             site_id => $site->site_id);

    }

    $instance_stats{$i} = \%site_list;

}


print STDOUT<<END;
######################################################################

Krang Version:\t\t$version

CMS Server IP Address:\t$ip_address

Installed Addons:

END

foreach (@addons) {
    my $tabs = (length($_->{name}) > 8) ? "\t" : "\t\t";
    print STDOUT "\t$_->{name}$tabs$_->{version}\n";
}

print STDOUT "\nConfigured instances (in conf/krang.conf):\n\n";

my ($total_stories, $total_media) = (0,0);


foreach my $i (keys %instance_stats) {

    print STDOUT sprintf("\n$i\n");

    unless (keys %{$instance_stats{$i}}) {
        print STDOUT "\tNo configured sites.\n";
        next;
    }

    my ($tot_s, $tot_m) = (0,0);

    foreach my $s (keys %{$instance_stats{$i}}) {
        my $sitename = sprintf("%s (id=%i)", $s, $instance_stats{$i}{$s}{site_id});

        my $len = length $sitename;

        my $site_tabs = ((32 - $len) > 8) ? "\t\t" : "\t";

        print STDOUT sprintf("\t%s%s%4i stories\t%4i media\n",
                             $sitename, $site_tabs,
                             $instance_stats{$i}{$s}{story_count},
                             $instance_stats{$i}{$s}{media_count});

        $tot_s += $instance_stats{$i}{$s}{story_count};
        $tot_m += $instance_stats{$i}{$s}{media_count};

    }

    print STDOUT "\t----------------------------------------------------------\n";
    print STDOUT sprintf("\tTOTAL:\t\t\t\t%4i stories\t%4i media\n\n", $tot_s, $tot_m);

    $total_stories += $tot_s;
    $total_media   += $tot_m;

}

print STDOUT "\n\n------------------------------------------------------------------\n";
print STDOUT sprintf("SYSTEMWIDE TOTAL:\t\t\t%4i stories\t%4i media\n\n",
                     $total_stories, $total_media);


exit;
