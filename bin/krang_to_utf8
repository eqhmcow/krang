#!/usr/bin/env perl
use warnings;
use strict;

=pod

=head1 NAME

krang_to_utf8 - utf8 conversion helper

=head1 SYNOPSIS

This script runs all the necessary programs and makes the necessary 
configuration changes to convert an entire Krang installation to UTF8.

    krang_to_utf8 --no-backup --remove-old-versions --verbose

=head1 DESCRIPTION

This script will convert your Krang installation to UTF8.

=head1 OPTIONS

The script takes the following options:

=over

=item --verbose

Show additional progress reports during conversion.

=item --no-prompt

Do not prompt user for any confirmation.

=item --no-backup

Do not back up the entire installation before proceeding.

=item --remove-old-versions

Prune all but the latest (converted) versions of stories, media and template to prevent ISEs when Reverting.

=item --test-mode

This is a mode in which actions will be displayed but not performed. (In this mode no backup will be performed.)

=over

=cut

use File::Spec::Functions qw(catdir catfile splitdir rel2abs canonpath);
use FindBin qw($RealBin);
use Config;

BEGIN {

    # Find a KRANG_ROOT based on path to bin
    unless ($ENV{KRANG_ROOT}) {
        my @dir = splitdir(canonpath($RealBin));
        $ENV{KRANG_ROOT} ||= catdir(@dir[0 .. $#dir - 1]);
    }

    # use $KRANG_ROOT/lib for modules
    my $lib = catdir($ENV{KRANG_ROOT}, "lib");
    $ENV{PERL5LIB} =
      $ENV{PERL5LIB}
      ? "$ENV{PERL5LIB}:${lib}"
      : "${lib}";
    unshift @INC, $lib, "$lib/" . $Config{archname};

    eval { require Krang::Conf };
    warn << "END" and exit(1) if $@;
######################################################################

Cannot load Krang.

Error message:

$@

######################################################################
END

    # add in $KRANG_ROOT/platform for platform build modules
    my $plib = catdir($ENV{KRANG_ROOT}, "platform");
    $ENV{PERL5LIB} = "$ENV{PERL5LIB}:${plib}";
    unshift @INC, $plib;
}

use Pod::Usage;
use Getopt::Long;
use Term::Prompt qw(prompt);

my ($from, $to, $help, $man, $v, $no_prompt, $no_backup, $remove_old_versions, $test_mode);
GetOptions(
    'no-prompt'           => \$no_prompt,
    'no-backup'           => \$no_backup,
    'remove-old-versions' => \$remove_old_versions,
    'help'                => \$help,
    'man'                 => \$man,
    'test-mode'           => \$test_mode,
    'verbose'             => \$v,
) or pod2usage(2);
pod2usage(1) if $help;
pod2usage(-verbose => 2) if $man;

use Krang::ClassFactory qw(pkg);
use Krang::ClassLoader 'Conf';
use Krang::ClassLoader 'Charset';

print "\nkrang_to_utf8\n-------------\n";

print "\n(*TEST MODE*)\n" if $test_mode;

if (pkg('Charset')->is_utf8) {
    print
      "\nYour krang.conf file already specifies UTF-8 as the character set.\n\nIf this is a recent change and you haven't actually converted or saved any data since making it, please revert the change and re-run krang_to_utf8.\n\n";
    exit;
}

my $old_charset = pkg('Charset')->mysql_charset;
unless ($no_prompt) {
    my $prompt =
      "\nThis program will stop krang, convert the entire database of every instance to UTF-8, and update krang.conf\n\n";
    $prompt .=
      $old_charset
      ? "Are you ready to proceed?"
      : "Your krang.conf has no character set specified.\n\nIs it safe to assume that your data is stored in Latin1 (i.e. ISO-8859 or Windows-1252), and that you're ready to convert everything to UTF-8?";
    exit 1 unless prompt("y", $prompt, "y/n", "n");
}

# assume latin-1 means windows-1252 so we fix special curly-quotes and the like
$old_charset = 'windows-1252' unless ($old_charset && ($old_charset != 'latin1'));

# set krang_instance var so other scripts don't die (instance doesn't matter since we use --all-instances)
my @instances = pkg('Conf')->instances;
$ENV{KRANG_INSTANCE} ||= $instances[0];

my $verbose = ($v         ? '--verbose'   : '');
my $test    = ($test_mode ? '--test-mode' : '');
my $bin = catdir($ENV{KRANG_ROOT}, "bin");

print "\n\nSTOPPING KRANG\n\n";
system("$bin/krang_ctl stop");

unless ($no_backup || $test_mode) {
    print "\nBACKING UP EVERYTHING\n\n";
    if (system("$bin/krang_backup $verbose")) {
        print "\nBACKUP FAILED: UTF8 UPGRADE ABORTED\n\n";
        exit;
    }
}

print "\nCONVERTING DATA TO UTF8\n\n";
if (
    system(
        "$bin/krang_charset_convert_data --all-instances --from $old_charset --to utf8 $verbose $test"
    )
  )
{
    print "\nDATA-CONVERSION FAILED: UTF8 UPGRADE INCOMPLETE (YOU MAY NEED TO RESTORE BACKUP!)\n\n";
    exit;
}

print
  "\nCONVERTING TABLE DEFINITIONS TO UTF8\n\n"; # skip history - it's huge and only has ASCII anyway
if (
    system(
        "$bin/krang_charset_convert_tables --all-instances --to utf8 --skip-table history $verbose $test"
    )
  )
{
    print
      "\nTABLE-CONVERSION FAILED: UTF8 UPGRADE INCOMPLETE (YOU MAY NEED TO RESTORE BACKUP!)\n\n";
    exit;
}

my $krang_conf_file = catfile($ENV{KRANG_ROOT}, "conf", "krang.conf");
unless (-e $krang_conf_file) {
    if ($test_mode) {
        print "\nCOULDN'T FIND KRANG.CONF!\n\n";
    } else {
        print
          "\nCOULDN'T FIND KRANG.CONF! PLEASE LOCATE IT AND ADD THE LINE 'CHARSET UTF8'; ASSUMING THERE WERE NO OTHER ERRORS, YOUR DATA AND TABLES SHOULD NOW BE CONVERTED.\n\n";
        print
          "THE ERROR DID PREVENT DELETION OF OLD VERSIONS: AFTER CHANGING KRANG.CONF, SEE BIN/KRANG_PRUNE_VERSIONS TO ACCOMPLISH THIS MANUALLY.\n\n"
          if $remove_old_versions;
    }
    exit;
}

print "\n\nUPDATING $krang_conf_file\n--------\n";
my $output;
open KRANG_CONF, "<$krang_conf_file";
my $added_charset;
while (<KRANG_CONF>) {
    if ($_ =~ /^\s*\#*\s*Charset\s/i) {
        chomp($_);
        if ($added_charset++) {
            print "REMOVING '$_'\n";
        } else {
            print "REPLACING '$_' WITH 'Charset UTF-8'\n";
            $output .= "Charset UTF-8\n";
        }
    } else {
        $output .= $_;
    }
}
unless ($added_charset) {
    print "ADDING 'Charset UTF-8' AT THE END\n";
    $output =~ s/\s+$//;
    $output .= "\n\nCharset UTF-8\n";
}
close KRANG_CONF;

unless ($test_mode) {
    open KRANG_CONF, "> $krang_conf_file";
    print KRANG_CONF $output;
    close KRANG_CONF;
}
print "\n";

my $versions;
if ($remove_old_versions) {
    print "\nREMOVING OLD VERSIONS OF STORIES, TEMPLATES, AND MEDIA OBJECTS FROM DATABASE\n";
    $versions = 1;
} else {
    print
      "\nADDING LATEST VERSION OF STORIES, TEMPLATES, AND MEDIA OBJECTS TO VERSION TABLES\n(THIS CALL TO KRANG_PRUNE_VERSIONS WILL NOT ACTUALLY DELETE ANYTHING, JUST UPDATE THE VERSION TABLES)\n";
    $versions = 999999;
}

if (
    system(
        "$bin/krang_prune_versions --all-instances --first-resave --versions-per-media $versions --versions-per-story $versions --versions-per-template $versions $verbose $test"
    )
  )
{
    print
      "KRANG_PRUNE_VERSIONS FAILED: NOT THE END OF THE WORLD; YOU CAN RUN THIS BY HAND LATER.\n(MAKE SURE TO USE THE '--first-resave' ARGUMENT)\n";
}

print "\nRE-STARTING KRANG\n\n";
system("$bin/krang_ctl start");

print
  "\nUTF8 UPGRADE COMPLETE!\n\nASSUMING NO ERRORS ABOVE, ALL YOU HAVE TO DO NOW IS MAKE SURE YOUR\nCATEGORY TEMPLATES AND/OR SERVER CONFIGURATION INCLUDE A UTF8 HEADER\n(e.g. \"Content-Type: text/html; charset=utf-8\") AND THEN RE-PUBLISH!\n\n";

print "* * * TEST MODE - NO ACTUAL CHANGES WERE WRITTEN TO THE DATABASE OR KRANG.CONF * * *\n\n"
  if $test_mode;
