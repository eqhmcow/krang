#!/usr/bin/env perl
use warnings;
use strict;

=pod

=head1 NAME

krang_clear_minified_assets - Remove any existing minified JS and CSS files

=head1 SYNOPSIS

   krang_clear_minified_assets --verbose

=head1 DESCRIPTION

This script is normally called by L<bin/krang_ctl> at Krang startup.
It removes any existing minified (and compressed) JavaScript and CSS files
that might have been generated by previous requests. These files might
exist in any subdirectory of F<$KRANG_ROOT/htdocs> or in the F<htdocs/>
directory of any existing addon.

=head1 OPTIONS

The script takes the following options:

=over

=item --verbose

Prints more information about which files are being deleted.

=item --help

=item --man

=back

=cut

use File::Find;
use File::Spec::Functions qw(catdir catfile splitdir canonpath);
use File::Path;
use FindBin qw($RealBin);
use Config;

BEGIN {
    # Find a KRANG_ROOT based on path to bin
    my @dir = splitdir(canonpath($RealBin));
    $ENV{KRANG_ROOT} ||= catdir(@dir[0 .. $#dir - 2]);

    # use $KRANG_ROOT/lib for modules
    my $lib    = catdir($ENV{KRANG_ROOT}, "lib");
    $ENV{PERL5LIB} = $ENV{PERL5LIB} ? "$ENV{PERL5LIB}:${lib}" :
      "${lib}";
    unshift @INC, $lib, "$lib/".$Config{archname};

    # load Krang::Conf (don't need to load Krang here because we won't
    # be slinging elements)
    eval { require Krang::Conf };
    warn << "END" and exit(1) if $@;
######################################################################

Cannot load Krang.

Error message:

$@

######################################################################
END
}

our ($help, $man, $v);

use Getopt::Long;
use Pod::Usage;
my $result = GetOptions(
    'verbose+'      => \$v,
    'help'          => \$help,
    'man'           => \$man,
) or pod2usage(2);
pod2usage(1)             if $help;
pod2usage(-verbose => 2) if $man;

use Krang::ClassFactory qw(pkg);
use Krang::ClassLoader Script => 'instance_agnostic';
use Krang::ClassLoader Conf => qw(KrangRoot);
use Krang::ClassLoader 'AddOn';
use File::Find;

# clear out the htdocs/ of any addons
foreach my $addon (pkg('AddOn')->find()) {
    my $dir = catdir(KrangRoot, 'addons', $addon->name, 'htdocs');
    if( -d $dir ) {
        print "Clearing $dir\n" if $v;
        traverse_and_clear($dir);
    }
}

# now clear out the main htdocs/ dir
traverse_and_clear(catdir(KrangRoot, 'htdocs'));

sub traverse_and_clear {
    my $dir = shift;
    find(
        {
            wanted => \&clear_file,
            follow_fast => 1,
            no_chdir => 1,
        },
        $dir,
    );
}

sub clear_file {
    my $file = $File::Find::name;
    next if $file =~ /^\./;
    if( $file =~ /\.minified\.(js|css)(\.gz)?$/ ) {
        print "  Removing file $file\n" if $v;
        unlink($file) or warn "Could not remove file $file!\n";
    }
}


print " Done.\n";
