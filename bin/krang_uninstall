#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;
use Pod::Usage;
use File::Spec::Functions qw(catdir catfile splitdir rel2abs);
use FindBin qw($RealBin);
use Config;

=pod

=head1 NAME

krang_uninstall - delete a krang install

=head1 SYNOPSIS

  krang_uninstall 

=head1 DESCRIPTION

This script will uninstall a krang instance by means
of database and file removal.

This script must be run as root.

Please use this script with utmost caution!

=head1 OPTIONS
  
    --verbose     - print a running dialogue of what happens, otherwise
                  actions are performed silently.

    --no_prompt   - suppress warning prompt

=cut

BEGIN {
    # Find a KRANG_ROOT based on path to bin
    my @dir = splitdir($RealBin);
    $ENV{KRANG_ROOT} ||= catdir(@dir[0 .. $#dir - 1]);

    # use $KRANG_ROOT/lib for modules
    my $lib    = catdir($ENV{KRANG_ROOT}, "lib");
    $ENV{PERL5LIB} = $ENV{PERL5LIB} ? "$ENV{PERL5LIB}:${lib}" :
      "${lib}";
    unshift @INC, $lib, "$lib/".$Config{archname};

    # load Krang::Conf (don't need to load Krang here because we won't
    # be slinging elements)
    eval { require Krang::Conf };
    warn << "END" and exit(1) if $@;
######################################################################

Cannot load Krang.

Error message:

$@

######################################################################
END
}

use Term::Prompt qw(prompt);
use Krang::Conf qw(KrangRoot HostName InstanceDBName DBUser DBPass);

my ($help, $man, $no_prompt);
my $verbose;

pod2usage(2) unless
  GetOptions(help         => \$help,
             man          => \$man,
             verbose => \$verbose,
             no_prompt => \$no_prompt
            );

pod2usage(1)             if $help;
pod2usage(-verbose => 2) if $man;

unless ($no_prompt) {
    exit 1
      unless prompt("y", "This program will totally and permanently remove this krang installation.\n\nAre you sure you
want to proceed?", "y/n", "y");
}

# Must be running as root.
exit_error("Must be run as root.") unless ($> eq "0");

# stop krang services
system($ENV{KRANG_ROOT}."/bin/krang_ctl stop");

# drop all databases
my $v = $verbose ? '--verbose' : '';

system($ENV{KRANG_ROOT}."/bin/krang_createdb --destroy --all --no_create --no_prompt $v");

# now blow all files away!
print "\nNow removing all files...\n\n" if $verbose;
system("rm -Rf $ENV{KRANG_ROOT}");

exit(1);

sub exit_error {
    my $cmd = $0;
    $cmd =~ s/.*\/(.+)$/$1/;

    my $message = shift;
    print STDERR "\nError: $cmd:  $message\n\n";
    exit(1);
}
