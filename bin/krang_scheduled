#!/usr/bin/perl

use strict;
use warnings;

use File::Spec::Functions qw(catdir splitdir canonpath);
use FindBin qw($RealBin);
use Config;





BEGIN {
    # Find a KRANG_ROOT based on path to bin
    my @dir = splitdir(canonpath($RealBin));
    $ENV{KRANG_ROOT} ||= catdir(@dir[0 .. $#dir - 1]);

    # use $KRANG_ROOT/lib for modules
    my $lib    = catdir($ENV{KRANG_ROOT}, "lib");
    $ENV{PERL5LIB} = $ENV{PERL5LIB} ? "$ENV{PERL5LIB}:${lib}" : 
      "${lib}";
    unshift @INC, $lib, "$lib/".$Config{archname};

    # load Krang::Conf (don't need to load Krang here because we won't
    # be slinging elements)
    eval { require Krang::Conf };
    warn << "END" and exit(1) if $@;
######################################################################

Cannot load Krang.

Error message:

$@

######################################################################
END
}

# setup first instance by default, schedule daemon works on all
# instances but Krang::Script isn't happy picking one anymore.
use Krang::ClassFactory qw(pkg);
use Krang::Conf;
BEGIN { $ENV{KRANG_INSTANCE} = (pkg('Conf')->instances)[0]; }
use Krang::ClassLoader 'Script';

use Krang::ClassLoader 'Schedule::Daemon';

#use Krang::Log qw(critical);

pkg('Schedule::Daemon')->run;

