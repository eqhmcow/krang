=head1 Upgrading Krang

=head2 Upgrading Krang from a Binary Release

To upgrade an existing Krang installation, first unpack the new
version of Krang and enter the created directory

  $ tar zxvf krang-1.013-Redhat7_3-perl5.6.1-i686-linux.tar.gz
  $ cd krang-1.013-Redhat7_3-perl5.6.1-i686-linux

Then, as root, run the Krang upgrade script:

  # ./bin/krang_upgrade

If Krang isn't installed in C</usr/local/krang> then you'll need to
point C<krang_upgrade> in the right direction:

  # ./bin/krang_upgrade --krangRoot /path/to/krang/install


=head1 Upgrading Krang from a Source Release

Before you can upgrade Krang, you must build necessary packages out of
the source release:

  $ cd KRANG_ROOT
  $ make build

Once built, you need to create a distribution package:

  $ make dist

You can then use the resulting tarball and follow the instructions
above for Binary Releases.



=head2 A Note for CVS Users

First, you should only use the CVS tree if you are involved in Krang
development.  The CVS tree is not stable for production use!

If you are attempting to upgrade an existing Krang installation from a
CVS checkout, you must build a distribution first using
C<bin/krang_makedist>.  If you run C<krang_upgrade> directly from the
CVS release, you run the risk of crucial config files being
overwritten, along with getting your directory tree polluted with
unnecessary CVS directories.

  # make build
  # make dist
  # cp krang-versionnum-platformname-perlversion.tar.gz /usr/local/src/.
  # cd /usr/local/src
  # tar zxf krang-versionnum-platformname-perlversion.tar.gz
  # cd krang-versionnum-platformname-perlversion/
  # ./bin/krang_upgrade --krangRoot /path/to/krang/install

