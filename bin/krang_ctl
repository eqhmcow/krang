#!/usr/bin/perl 
#
# krang_ctl     Start Krang CMS
#
# chkconfig: 345 99 01
# description: Starts and stops Krang CMS installation
#
#
use warnings;
use strict;

=head1 NAME

krang_ctl

=head1 SYNOPSIS

  krang_ctl start

  krang_ctl stop

  krang_ctl restart

=head1 DESCRIPTION

This is the control script for Krang.  You can use this script to
start, stop and restart all the services offered by Krang.  This
script must be run as root, unless you have a working 'sudo' with
NOPASSWD setup in which case krang_ctl will use that to start
processes as root.

This script calls krang_apachectl, krang_ftpctl and krang_schedulectl
to do its work.  See their respective manpages for details concerning
environment variables that may be used to control their functioning.

=cut

# how long to wait for stop on restart (in seconds)
use constant MAX_RESTART_WAIT => 10;

$|++;

use File::Spec::Functions qw(catdir catfile splitdir rel2abs);
use FindBin qw($RealBin);
use Config;

BEGIN {
    # Find a KRANG_ROOT based on path to bin
    my @dir = splitdir($RealBin);
    $ENV{KRANG_ROOT} ||= catdir(@dir[0 .. $#dir - 1]);

    # use $KRANG_ROOT/lib for modules
    my $lib    = catdir($ENV{KRANG_ROOT}, "lib");
    $ENV{PERL5LIB} = $ENV{PERL5LIB} ? "$ENV{PERL5LIB}:${lib}" : "${lib}";
    unshift @INC, $lib, "$lib/".$Config{archname};

    # load Krang::Conf (don't need to load Krang here because we won't
    # be slinging elements)
    eval { require Krang::Conf };
    die <<"END" if $@;
######################################################################

Cannot load Krang.

Error message:

$@

######################################################################
END
}

use Krang::Conf qw(KrangRoot EnableSiteServer);

# check for args
usage() unless @ARGV;
my $command = shift @ARGV;
usage() unless $command eq 'start' or
               $command eq 'stop' or
               $command eq 'restart';

# will need sudo?
my $sudo = "";
if ($< != 0 or $> != 0) {
    $sudo = "sudo ";
}

my @ctl = (qw(krang_apachectl krang_ftpctl krang_schedulectl));
push(@ctl, 'krang_siteserverctl') if EnableSiteServer;

# call ctl scripts
for (@ctl) {
    my $script = catfile(KrangRoot, 'bin', $_);
    print STDERR "=> krang_ctl calling '$sudo$script $command'...\n";
    system("$sudo$script $command");
    print STDERR "\n";
}

sub usage {
  print <<END;
usage: krang_ctl (start|stop|restart)

  start      - start krang services
  stop       - stop krang services
  restart    - restart krang services

END

  exit;
}
